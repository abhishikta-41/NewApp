{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programing\\\\React\\\\newsapp\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\n// import React, { Component } from \"react\";\n// import NewsItems from \"./NewsItems\";\n// import Spinner from \"./Spinner\";\n// import PropTypes from \"prop-types\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\n// export class News extends Component {\n//   static defaultProps = {\n//     country: \"in\",\n//     pageSize: 8,\n//     category: \"general\",\n//   };\n//   static propTypes = {\n//     country: PropTypes.string,\n//     pageSize: PropTypes.number,\n//     category: PropTypes.string,\n//   };\n\n//   capitalizeFirstLetter = (string) => {\n//     return string.charAt(0).toUpperCase() + string.slice(1);\n//   };\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       articles: [],\n//       loading: true,\n//       page: 1,\n//       totalResults: 0,\n//     };\n//     document.title = `${this.capitalizeFirstLetter(\n//       props.category\n//     )} - NewsMonkey`;\n//   }\n\n//   async updateNews() {\n//     props.setProgress(10);\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n//     this.setState({ loading: true });\n//     let data = await fetch(url);\n//     props.setProgress(30);\n//     let parsedData = await data.json();\n//     props.setProgress(70);\n//     console.log(parsedData);\n//     this.setState({\n//       articles: parsedData.articles,\n//       totalResults: parsedData.totalResults,\n//       loading: false,\n//     });\n//     props.setProgress(100);\n//   }\n\n//   async componentDidMount() {\n//     this.updateNews();\n//   }\n\n//   // handlePrevClick = async () => {\n//   //   this.setState({ page: page - 1 });\n//   //   this.updateNews();\n//   // };\n//   // handleNextClick = async () => {\n//   //   this.setState({ page: page + 1 });\n//   //   this.updateNews();\n//   // };\n\n//   fetchMoreData = async () => {\n//     this.setState({ page: page + 1 });\n//     let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page + 1}&pageSize=${props.pageSize}`;\n\n//     let data = await fetch(url);\n//     let parsedData = await data.json();\n//     console.log(parsedData);\n//     this.setState({\n//       articles: articles.concat(parsedData.articles),\n//       totalResults: parsedData.totalResults,\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <h1 className=\"text-center\" style={{ margin: \"35px 0px\" }}>\n//           NewsMonkey - Top {this.capitalizeFirstLetter(props.category)}{\" \"}\n//           Headlines\n//         </h1>\n//         {loading && <Spinner />}\n//         <InfiniteScroll\n//           dataLength={articles.length}\n//           next={this.fetchMoreData}\n//           hasMore={articles.length !== totalResults}\n//           loader={<Spinner />}\n//         >\n//           <div className=\"container\">\n//             <div className=\"row\">\n//               {\n//                 /*!loading &&*/ articles?.map(\n//                   (element,index) => {\n//                     return (\n//                       <div className=\"col-md-4\" key={index}>\n//                         <NewsItems\n//                           title={\n//                             element.title ? element.title.slice(0, 45) : \"\"\n//                           }\n//                           description={\n//                             element.description\n//                               ? element.description.slice(0, 88)\n//                               : \"\"\n//                           }\n//                           imageUrl={element.urlToImage}\n//                           newsUrl={element.url}\n//                           author={element.author}\n//                           date={element.publishedAt}\n//                           source={element.source.name}\n//                         />\n//                       </div>\n//                     );\n//                   }\n//                 )\n//               }\n//             </div>\n//           </div>\n//         </InfiniteScroll>\n\n//         {/* <div className=\"container d-flex justify-content-between\">\n//           <button\n//             disabled={page <= 1}\n//             type=\"button\"\n//             className=\"btn btn-dark\"\n//             onClick={this.handlePrevClick}\n//           >\n//             &larr; Previous\n//           </button>\n//           <button\n//             disabled={page + 1 > Math.ceil(totalResults / props.pageSize)}\n//             type=\"button\"\n//             className=\"btn btn-dark\"\n//             onClick={this.handleNextClick}\n//           >\n//             Next &rarr;\n//           </button>\n//         </div> */}\n//       </>\n//     );\n//   }\n// }\n\n// export default News;\n\n//*****using function based */\nimport React, { useEffect, useState } from \"react\";\nimport NewsItems from \"./NewsItems\";\nimport Spinner from \"./Spinner\";\nimport PropTypes from \"prop-types\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const updateNews = async () => {\n    props.setProgress(10);\n    var options = {\n      method: 'GET',\n      url: \"https://app.newscatcherapi.com/v2/search\",\n      params: {\n        q: `${props.category}`,\n        lang: 'en',\n        sort_by: 'relevancy',\n        page: `${page + 1}`\n      },\n      headers: {\n        'x-api-key': `${props.apiKey}`\n      }\n    };\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    props.setProgress(30);\n    let parsedData = await data.json();\n    props.setProgress(70);\n    console.log(parsedData);\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  };\n  useEffect(() => {\n    document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n    updateNews();\n    //eslint-disable-next-line\n  }, []);\n\n  // handlePrevClick = async () => {\n  //   setPage(page-1)\n  //   updateNews();\n  // };\n  // handleNextClick = async () => {\n  //   setPage(page+1)\n  //   updateNews();\n  // };\n\n  const fetchMoreData = async () => {\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page + 1}&pageSize=${props.pageSize}`;\n    setPage(page + 1);\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    console.log(parsedData);\n    setArticles(articles.concat(parsedData.articles));\n    setTotalResults(parsedData.totalResults);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      style: {\n        margin: \"35px 0px\",\n        marginTop: \"90px\"\n      },\n      children: [\"NewsMonkey - Top \", capitalizeFirstLetter(props.category), \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*!loading &&*/articles === null || articles === void 0 ? void 0 : articles.map((element, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(NewsItems, {\n                title: element.title ? element.title.slice(0, 45) : \"\",\n                description: element.description ? element.description.slice(0, 88) : \"\",\n                imageUrl: element.urlToImage,\n                newsUrl: element.url,\n                author: element.author,\n                date: element.publishedAt,\n                source: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(News, \"DJGT5z9fcO00SGn/4yt1PHL84Ps=\");\n_c = News;\nNews.defaultProps = {\n  country: \"in\",\n  pageSize: 8,\n  category: \"general\"\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","NewsItems","Spinner","PropTypes","InfiniteScroll","jsxDEV","_jsxDEV","Fragment","_Fragment","News","props","_s","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","setProgress","options","method","url","params","q","category","lang","sort_by","headers","apiKey","country","pageSize","data","fetch","parsedData","json","console","log","document","title","fetchMoreData","concat","children","className","style","margin","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","loader","map","element","index","description","imageUrl","urlToImage","newsUrl","author","date","publishedAt","source","name","_c","defaultProps","propTypes","number","$RefreshReg$"],"sources":["D:/Programing/React/newsapp/src/components/News.js"],"sourcesContent":["// import React, { Component } from \"react\";\r\n// import NewsItems from \"./NewsItems\";\r\n// import Spinner from \"./Spinner\";\r\n// import PropTypes from \"prop-types\";\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n// export class News extends Component {\r\n//   static defaultProps = {\r\n//     country: \"in\",\r\n//     pageSize: 8,\r\n//     category: \"general\",\r\n//   };\r\n//   static propTypes = {\r\n//     country: PropTypes.string,\r\n//     pageSize: PropTypes.number,\r\n//     category: PropTypes.string,\r\n//   };\r\n\r\n//   capitalizeFirstLetter = (string) => {\r\n//     return string.charAt(0).toUpperCase() + string.slice(1);\r\n//   };\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       articles: [],\r\n//       loading: true,\r\n//       page: 1,\r\n//       totalResults: 0,\r\n//     };\r\n//     document.title = `${this.capitalizeFirstLetter(\r\n//       props.category\r\n//     )} - NewsMonkey`;\r\n//   }\r\n\r\n//   async updateNews() {\r\n//     props.setProgress(10);\r\n//     const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\r\n//     this.setState({ loading: true });\r\n//     let data = await fetch(url);\r\n//     props.setProgress(30);\r\n//     let parsedData = await data.json();\r\n//     props.setProgress(70);\r\n//     console.log(parsedData);\r\n//     this.setState({\r\n//       articles: parsedData.articles,\r\n//       totalResults: parsedData.totalResults,\r\n//       loading: false,\r\n//     });\r\n//     props.setProgress(100);\r\n//   }\r\n\r\n//   async componentDidMount() {\r\n//     this.updateNews();\r\n//   }\r\n\r\n//   // handlePrevClick = async () => {\r\n//   //   this.setState({ page: page - 1 });\r\n//   //   this.updateNews();\r\n//   // };\r\n//   // handleNextClick = async () => {\r\n//   //   this.setState({ page: page + 1 });\r\n//   //   this.updateNews();\r\n//   // };\r\n\r\n//   fetchMoreData = async () => {\r\n//     this.setState({ page: page + 1 });\r\n//     let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page + 1}&pageSize=${props.pageSize}`;\r\n\r\n//     let data = await fetch(url);\r\n//     let parsedData = await data.json();\r\n//     console.log(parsedData);\r\n//     this.setState({\r\n//       articles: articles.concat(parsedData.articles),\r\n//       totalResults: parsedData.totalResults,\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <h1 className=\"text-center\" style={{ margin: \"35px 0px\" }}>\r\n//           NewsMonkey - Top {this.capitalizeFirstLetter(props.category)}{\" \"}\r\n//           Headlines\r\n//         </h1>\r\n//         {loading && <Spinner />}\r\n//         <InfiniteScroll\r\n//           dataLength={articles.length}\r\n//           next={this.fetchMoreData}\r\n//           hasMore={articles.length !== totalResults}\r\n//           loader={<Spinner />}\r\n//         >\r\n//           <div className=\"container\">\r\n//             <div className=\"row\">\r\n//               {\r\n//                 /*!loading &&*/ articles?.map(\r\n//                   (element,index) => {\r\n//                     return (\r\n//                       <div className=\"col-md-4\" key={index}>\r\n//                         <NewsItems\r\n//                           title={\r\n//                             element.title ? element.title.slice(0, 45) : \"\"\r\n//                           }\r\n//                           description={\r\n//                             element.description\r\n//                               ? element.description.slice(0, 88)\r\n//                               : \"\"\r\n//                           }\r\n//                           imageUrl={element.urlToImage}\r\n//                           newsUrl={element.url}\r\n//                           author={element.author}\r\n//                           date={element.publishedAt}\r\n//                           source={element.source.name}\r\n//                         />\r\n//                       </div>\r\n//                     );\r\n//                   }\r\n//                 )\r\n//               }\r\n//             </div>\r\n//           </div>\r\n//         </InfiniteScroll>\r\n\r\n//         {/* <div className=\"container d-flex justify-content-between\">\r\n//           <button\r\n//             disabled={page <= 1}\r\n//             type=\"button\"\r\n//             className=\"btn btn-dark\"\r\n//             onClick={this.handlePrevClick}\r\n//           >\r\n//             &larr; Previous\r\n//           </button>\r\n//           <button\r\n//             disabled={page + 1 > Math.ceil(totalResults / props.pageSize)}\r\n//             type=\"button\"\r\n//             className=\"btn btn-dark\"\r\n//             onClick={this.handleNextClick}\r\n//           >\r\n//             Next &rarr;\r\n//           </button>\r\n//         </div> */}\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default News;\r\n\r\n//*****using function based */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NewsItems from \"./NewsItems\";\r\nimport Spinner from \"./Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst News = (props) => {\r\n  const [articles, setArticles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [totalResults, setTotalResults] = useState(0);\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  const updateNews = async () => {\r\n    props.setProgress(10);\r\n    var options={\r\n      method : 'GET',\r\n      url:\"https://app.newscatcherapi.com/v2/search\",\r\n      params:{q:`${props.category}`,lang:'en',sort_by:'relevancy',\r\n     page:`${page+1}`},\r\n     headers:{'x-api-key':`${props.apiKey}`}\r\n    };\r\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\r\n\r\n    setLoading(true);\r\n    let data = await fetch(url);\r\n    props.setProgress(30);\r\n    let parsedData = await data.json();\r\n    props.setProgress(70);\r\n    console.log(parsedData);\r\n    setArticles(parsedData.articles);\r\n    setTotalResults(parsedData.totalResults);\r\n    setLoading(false);\r\n\r\n    props.setProgress(100);\r\n  };\r\n  useEffect(() => {\r\n    document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\r\n    updateNews();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  // handlePrevClick = async () => {\r\n  //   setPage(page-1)\r\n  //   updateNews();\r\n  // };\r\n  // handleNextClick = async () => {\r\n  //   setPage(page+1)\r\n  //   updateNews();\r\n  // };\r\n\r\n  const fetchMoreData = async () => {\r\n    let url = `https://newsapi.org/v2/top-headlines?country=${\r\n      props.country\r\n    }&category=${props.category}&apiKey=${props.apiKey}&page=${\r\n      page + 1\r\n    }&pageSize=${props.pageSize}`;\r\n    setPage(page + 1);\r\n    let data = await fetch(url);\r\n    let parsedData = await data.json();\r\n    console.log(parsedData);\r\n    setArticles(articles.concat(parsedData.articles));\r\n    setTotalResults(parsedData.totalResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1\r\n        className=\"text-center\"\r\n        style={{ margin: \"35px 0px\", marginTop: \"90px\" }}\r\n      >\r\n        NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines\r\n      </h1>\r\n      {loading && <Spinner />}\r\n      <InfiniteScroll\r\n        dataLength={articles.length}\r\n        next={fetchMoreData}\r\n        hasMore={articles.length !== totalResults}\r\n        loader={<Spinner />}\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {\r\n              /*!loading &&*/ articles?.map((element, index) => {\r\n                return (\r\n                  <div className=\"col-md-4\" key={index}>\r\n                    <NewsItems\r\n                      title={element.title ? element.title.slice(0, 45) : \"\"}\r\n                      description={\r\n                        element.description\r\n                          ? element.description.slice(0, 88)\r\n                          : \"\"\r\n                      }\r\n                      imageUrl={element.urlToImage}\r\n                      newsUrl={element.url}\r\n                      author={element.author}\r\n                      date={element.publishedAt}\r\n                      source={element.source.name}\r\n                    />\r\n                  </div>\r\n                );\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n      </InfiniteScroll>\r\n\r\n      {/* <div className=\"container d-flex justify-content-between\">\r\n          <button\r\n            disabled={page <= 1}\r\n            type=\"button\"\r\n            className=\"btn btn-dark\"\r\n            onClick={handlePrevClick}\r\n          >\r\n            &larr; Previous\r\n          </button>\r\n          <button\r\n            disabled={page + 1 > Math.ceil(totalResults / props.pageSize)}\r\n            type=\"button\"\r\n            className=\"btn btn-dark\"\r\n            onClick={handleNextClick}\r\n          >\r\n            Next &rarr;\r\n          </button>\r\n        </div> */}\r\n    </>\r\n  );\r\n};\r\nNews.defaultProps = {\r\n  country: \"in\",\r\n  pageSize: 8,\r\n  category: \"general\",\r\n};\r\nNews.propTypes = {\r\n  country: PropTypes.string,\r\n  pageSize: PropTypes.number,\r\n  category: PropTypes.string,\r\n};\r\n\r\nexport default News;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMoB,qBAAqB,GAAIC,MAAM,IAAK;IACxC,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7Bf,KAAK,CAACgB,WAAW,CAAC,EAAE,CAAC;IACrB,IAAIC,OAAO,GAAC;MACVC,MAAM,EAAG,KAAK;MACdC,GAAG,EAAC,0CAA0C;MAC9CC,MAAM,EAAC;QAACC,CAAC,EAAE,GAAErB,KAAK,CAACsB,QAAS,EAAC;QAACC,IAAI,EAAC,IAAI;QAACC,OAAO,EAAC,WAAW;QAC5DlB,IAAI,EAAE,GAAEA,IAAI,GAAC,CAAE;MAAC,CAAC;MACjBmB,OAAO,EAAC;QAAC,WAAW,EAAE,GAAEzB,KAAK,CAAC0B,MAAO;MAAC;IACvC,CAAC;IACD,MAAMP,GAAG,GAAI,gDAA+CnB,KAAK,CAAC2B,OAAQ,aAAY3B,KAAK,CAACsB,QAAS,WAAUtB,KAAK,CAAC0B,MAAO,SAAQpB,IAAK,aAAYN,KAAK,CAAC4B,QAAS,EAAC;IAErKvB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIwB,IAAI,GAAG,MAAMC,KAAK,CAACX,GAAG,CAAC;IAC3BnB,KAAK,CAACgB,WAAW,CAAC,EAAE,CAAC;IACrB,IAAIe,UAAU,GAAG,MAAMF,IAAI,CAACG,IAAI,EAAE;IAClChC,KAAK,CAACgB,WAAW,CAAC,EAAE,CAAC;IACrBiB,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;IACvB5B,WAAW,CAAC4B,UAAU,CAAC7B,QAAQ,CAAC;IAChCO,eAAe,CAACsB,UAAU,CAACvB,YAAY,CAAC;IACxCH,UAAU,CAAC,KAAK,CAAC;IAEjBL,KAAK,CAACgB,WAAW,CAAC,GAAG,CAAC;EACxB,CAAC;EACD3B,SAAS,CAAC,MAAM;IACd8C,QAAQ,CAACC,KAAK,GAAI,GAAE1B,qBAAqB,CAACV,KAAK,CAACsB,QAAQ,CAAE,eAAc;IACxEP,UAAU,EAAE;IACZ;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMsB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIlB,GAAG,GAAI,gDACTnB,KAAK,CAAC2B,OACP,aAAY3B,KAAK,CAACsB,QAAS,WAAUtB,KAAK,CAAC0B,MAAO,SACjDpB,IAAI,GAAG,CACR,aAAYN,KAAK,CAAC4B,QAAS,EAAC;IAC7BrB,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACjB,IAAIuB,IAAI,GAAG,MAAMC,KAAK,CAACX,GAAG,CAAC;IAC3B,IAAIY,UAAU,GAAG,MAAMF,IAAI,CAACG,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;IACvB5B,WAAW,CAACD,QAAQ,CAACoC,MAAM,CAACP,UAAU,CAAC7B,QAAQ,CAAC,CAAC;IACjDO,eAAe,CAACsB,UAAU,CAACvB,YAAY,CAAC;EAC1C,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAyC,QAAA,gBACE3C,OAAA;MACE4C,SAAS,EAAC,aAAa;MACvBC,KAAK,EAAE;QAAEC,MAAM,EAAE,UAAU;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAJ,QAAA,GAClD,mBACkB,EAAC7B,qBAAqB,CAACV,KAAK,CAACsB,QAAQ,CAAC,EAAC,YAC1D;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACJ3C,OAAO,iBAAIR,OAAA,CAACJ,OAAO;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvBnD,OAAA,CAACF,cAAc;MACbsD,UAAU,EAAE9C,QAAQ,CAAC+C,MAAO;MAC5BC,IAAI,EAAEb,aAAc;MACpBc,OAAO,EAAEjD,QAAQ,CAAC+C,MAAM,KAAKzC,YAAa;MAC1C4C,MAAM,eAAExD,OAAA,CAACJ,OAAO;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;MAAAR,QAAA,eAEpB3C,OAAA;QAAK4C,SAAS,EAAC,WAAW;QAAAD,QAAA,eACxB3C,OAAA;UAAK4C,SAAS,EAAC,KAAK;UAAAD,QAAA,EAEhB,eAAgBrC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEmD,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;YAChD,oBACE3D,OAAA;cAAK4C,SAAS,EAAC,UAAU;cAAAD,QAAA,eACvB3C,OAAA,CAACL,SAAS;gBACR6C,KAAK,EAAEkB,OAAO,CAAClB,KAAK,GAAGkB,OAAO,CAAClB,KAAK,CAACtB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAG;gBACvD0C,WAAW,EACTF,OAAO,CAACE,WAAW,GACfF,OAAO,CAACE,WAAW,CAAC1C,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAChC,EACL;gBACD2C,QAAQ,EAAEH,OAAO,CAACI,UAAW;gBAC7BC,OAAO,EAAEL,OAAO,CAACnC,GAAI;gBACrByC,MAAM,EAAEN,OAAO,CAACM,MAAO;gBACvBC,IAAI,EAAEP,OAAO,CAACQ,WAAY;gBAC1BC,MAAM,EAAET,OAAO,CAACS,MAAM,CAACC;cAAK;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAC5B,GAb2BQ,KAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAc9B;UAEV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACS;EAAA,gBAoBhB;AAEP,CAAC;AAAC9C,EAAA,CA5HIF,IAAI;AAAAkE,EAAA,GAAJlE,IAAI;AA6HVA,IAAI,CAACmE,YAAY,GAAG;EAClBvC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,CAAC;EACXN,QAAQ,EAAE;AACZ,CAAC;AACDvB,IAAI,CAACoE,SAAS,GAAG;EACfxC,OAAO,EAAElC,SAAS,CAACkB,MAAM;EACzBiB,QAAQ,EAAEnC,SAAS,CAAC2E,MAAM;EAC1B9C,QAAQ,EAAE7B,SAAS,CAACkB;AACtB,CAAC;AAED,eAAeZ,IAAI;AAAC,IAAAkE,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}